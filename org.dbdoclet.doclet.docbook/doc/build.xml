<?xml version='1.0' encoding='UTF-8'?>

<project name="Application"
	     default="all"
	     basedir="."
	     xmlns:ivy="antlib:org.apache.ivy.ant">

	<description>
		Buildfile für das Projekt MarkenSever.
		Es werden die einzelenen Unterprojekt gebaut.
        Aus diesen wird eine EAR (wahlweise in unterschiedlichen Konfigrationen erstellt).
        Das EAR kann in eine Test/Entwicklungsumgebung deployed werden und die Test können zentral
        ausgeführt werden.
    </description>

	<property name="package.config.dir" value="${basedir}/conf.ear" />
	<property name="default.config.dir" value="${package.config.dir}/config" />
	<property name="ear.config.dir" value="${package.config.dir}/ear" />

	<import file="../build.common/defaultBuild.xml"/>

	<!--
    ================================================================================
    Toplevel Build
    ================================================================================
    -->

	<target name="world"
			depends="unset.development, all.rebuild, test.unit, javadoc"
		    description="Kompletter Build aller Subprojekte und Erstellen aller EAR Variationen."/>

	<target name="set.development" >
      <property name="ignore.nondevelopment.packages" value="true" />
	</target>

	<target name="unset.development" >
      <property name="ignore.nondevelopment.packages" value="false" />
	</target>

	<target name="all" depends="-all.sub, set.development, default.all"
		    description="Kompletter Build EWU." />

	<target name="all.rebuild"
			depends="default.clean.force, -all.rebuild.sub, set.development, default.all"
			description="Rebuild development" />
	<target name="all.rebuild.eclipse" depends="all.rebuild" description="Deprecated: all.rebuild"/>

	<target name="clean"
		    depends="default.clean, -clean.sub"
		    description="Loesche Kompilierungsergebnisse aus allen Projekten"/>

	<target name="clean.force"
		    depends="default.clean.force, -clean.force.sub"
		    description="Loeschen alle Build-Ergebenisse aus allen Projekten"/>

	<target name="clean.eclipse" depends="clean.force" description="Deprecated: clean.force"/>
	<!--
    ================================================================================
    Packaging/Ear
    ================================================================================
    -->

	<target name="package"
            depends="default.package, package.devl, package.prod, package.ewu, package.test, package.edu" />


	<target name="package.devl" depends="build">
		<description>Erstelle das EAR fuer Szenario DEVL mit AspectJ.</description>
		<ConfigVars configuration="${configuration.devl}" />
        <CreateConfigJar eartargetdir="${earbase}-devl" configuration="devl" />
        <CreateEar earName="${deploy.dir}/${earbase}-devl/MarkenServer.ear" >
          <earContents>
            <zipfileset file="${product.dir}/${conf.name}-devl.jar" prefix="lib" />
          </earContents>
        </CreateEar>
		<MakePackageJBossConfig eartargetdir="${earbase}-devl" configuration="devl" />
	</target>

	<target name="package.prod" depends="build" unless="ignore.nondevelopment.packages">
		<description>Erstelle das EAR fuer Szenario PROD.</description>
		<ConfigVars configuration="${configuration.prod}" />
        <CreateConfigJar eartargetdir="${earbase}-prod" configuration="prod" />
        <CreateEar earName="${deploy.dir}/${earbase}-prod/MarkenServer.ear" >
          <earContents>
            <zipfileset file="${product.dir}/${conf.name}-prod.jar" prefix="lib" />
          </earContents>
        </CreateEar>
		<MakePackageJBossConfig eartargetdir="${earbase}-prod" configuration="prod" />
	</target>

	<target name="package.ewu" depends="build" unless="ignore.nondevelopment.packages">
		<description>Erstelle das EAR fuer Szenario EWU.</description>
		<ConfigVars configuration="${configuration.ewu}" />
        <CreateConfigJar eartargetdir="${earbase}-ewu" configuration="ewu" />
        <CreateEar earName="${deploy.dir}/${earbase}-ewu/MarkenServer.ear" >
          <earContents>
            <zipfileset file="${product.dir}/${conf.name}-ewu.jar" prefix="lib" />
          </earContents>
        </CreateEar>
		<MakePackageJBossConfig eartargetdir="${earbase}-ewu" configuration="ewu" />
	</target>

	<target name="package.test" depends="build" unless="ignore.nondevelopment.packages">
		<description>Erstelle das EAR fuer Szenario TEST.</description>
		<ConfigVars configuration="${configuration.test}" />
        <CreateConfigJar eartargetdir="${earbase}-test" configuration="test" />
        <CreateEar earName="${deploy.dir}/${earbase}-test/MarkenServer.ear" >
          <earContents>
            <zipfileset file="${product.dir}/${conf.name}-test.jar" prefix="lib" />
          </earContents>
        </CreateEar>
		<MakePackageJBossConfig eartargetdir="${earbase}-test" configuration="test" />
	</target>

	<target name="package.edu" depends="build" unless="ignore.nondevelopment.packages">
		<description>Erstelle das EAR fuer Szenario EDU.</description>
		<ConfigVars configuration="${configuration.edu}" />
        <CreateConfigJar eartargetdir="${earbase}-edu" configuration="edu" />
        <CreateEar earName="${deploy.dir}/${earbase}-edu/MarkenServer.ear" >
          <earContents>
            <zipfileset file="${product.dir}/${conf.name}-edu.jar" prefix="lib" />
          </earContents>
        </CreateEar>
		<MakePackageJBossConfig eartargetdir="${earbase}-edu" configuration="edu" />
	</target>
    <!--
    ================================================================================
    Java Dokumentation erstellen
    ================================================================================
    -->

	<target name="javadoc" depends="-javadoc.sub, default.javadoc"
			description="Erstelle die Javadoc API-Dokumentation."/>

	<!--
    ================================================================================
    Deployment
    ================================================================================
    -->

	<target name="deploy.localhost"
            depends="all, package, init.localhost.jboss.config, deploy.localhost.jboss"
			description="Deployment des DPMAmarken Server auf lokalen JBoss">
	</target>

	<target name="deploy.localhost.jboss">
      <DeployLocalJBoss sourceDir="${deploy.dir}/${earbase}-devl" fileName="MarkenServer.ear"/>
	</target>

	<target name="init.localhost.jboss.config">
	  <CopyDevlLocalJBossConfig eartargetdir="${earbase}-devl" configuration="devl" />
	</target>

	<target name="clean.jboss.config"
			description="Löscht die JBoss-Zielkonfiguration (Definiert mit jboss.target.config)">
	  <ConfigVars configuration="${configuration.devl}" />
	  <delete dir="${jboss.as.local.install.dir}/server/${devl.jboss.target.config}">
	  </delete>
	</target>

	<!--
    ================================================================================
    Macro Definitionen
    ================================================================================
    -->

	<macrodef name="ConfigVars">
	  <attribute name="configuration" />
	  <sequential>
		<property prefix="@{configuration}" file="${subproject.application.location}/${conf.name}.@{configuration}/server.local.properties" />
		<property prefix="@{configuration}" file="${subproject.application.location}/${conf.name}.@{configuration}/server.properties" />
		<property prefix="@{configuration}" file="${default.config.dir}/server.default.properties" />

		<filterset id="@{configuration}.conf.filter">
		  <filter token="SERVER_VERSION" value="${serverFullVersion}" />
		</filterset>
	  </sequential>
	</macrodef>

	<macrodef name="CreateConfigJar" description="Erstelle die jar-Datei fuer Konfigurationen">
	  <attribute name="earTargetDir" />
	  <attribute name="configuration" />
	  <sequential>
		<delete dir="${target.dir}/@{earTargetDir}/${conf.name}" includes="**/**" />
		<mkdir dir="${target.dir}/@{earTargetDir}/${conf.name}" />
		<copy todir="${target.dir}/@{earTargetDir}/${conf.name}" overwrite="true" filtering="true">
		  <fileset dir="${default.config.dir}">
			<exclude name="*.p12" />
			<exclude name="*.cer" />
		  </fileset>
		  <fileset dir="${basedir}/${conf.name}.@{configuration}">
			<exclude name="*.p12" />
			<exclude name="*.cer" />
			<exclude name="*log4j*.xml" />
		  </fileset>
		  <filterset refid="@{configuration}.conf.filter" />
		</copy>
		<copy todir="${target.dir}/@{earTargetDir}/${conf.name}" overwrite="true" filtering="false">
		  <fileset dir="${basedir}/${conf.name}.@{configuration}">
			<include name="*.p12" />
			<include name="*.cer" />
		  </fileset>
		</copy>
		<mrk.jar destfile="${product.dir}/${conf.name}-@{configuration}.jar">
		  <fileset dir="${target.dir}/@{earTargetDir}/${conf.name}" />
		</mrk.jar>
	  </sequential>
	</macrodef>

	<macrodef name="CopyDevlLocalJBossConfig" description="Bereitet die lokale JBoss-Konfiguration vor">
	  <attribute name="configuration" />
	  <attribute name="earTargetDir" />

	  <sequential>
		<ConfigVars configuration="${configuration.@{configuration}}" />

		<!-- Basiskonfiguration kopieren -->
		<copy todir="${jboss.as.local.install.dir}/server/${@{configuration}.jboss.target.config}" preservelastmodified="true">
		<fileset dir="${jboss.as.local.install.dir}/server/${@{configuration}.jboss.base.config}">
		  <exclude name="deploy/*-ds.xml" />
		  <exclude name="deploy/messaging/*persistence-service.xml" />
		  <exclude name="log/**"/>
		</fileset>
		</copy>

		<!-- Dateien mit geänderten  Werten und Umgebungsspezifischen Parameter überschereiben -->
		<unzip src="${deploy.dir}/@{earTargetDir}/JBossConfig.zip" dest="${jboss.as.local.install.dir}/server/${@{configuration}.jboss.target.config}" />
		<!-- Startskripte kopieren -->
		<copy todir="${jboss.as.local.install.dir}/bin" >
		  <fileset dir="${jboss.tempates.dir}/startScripts">
			<include name="run.conf.bat"/>
			<include name="runMrkDevl.bat"/>
		  </fileset>
		</copy>
	  </sequential>
	</macrodef>

	<macrodef name="PrepareJBossConfig" description="Bereitet die lokale JBoss-Konfiguration vor">
	  <attribute name="jbossConfDir" />
	  <attribute name="configuration" />
	  <sequential>
		<echo>Prepare JBossConfig jbossConfDir=@{jbossConfDir}, configuration=@{configuration}</echo>
		<mkdir dir="@{jbossConfDir}" />
		<copy todir="@{jbossConfDir}">
		  <fileset dir="${jboss.tempates.dir}/${@{configuration}.jboss.template}">
			<exclude name="deploy/*ds.xml" />
			<!--DataSource in zweitem Schritt mit Filter kopieren -->
		  </fileset>
		</copy>

		<!-- Generiere die Datasourcedefinition jedes mal neu falls sich die server*.properties geändert haben -->
		<dependset>
		  <srcfileset dir="${basedir}">
			<include name="local.properties" />
		  </srcfileset>
		  <srcfileset dir="${basedir}/conf.@{configuration}">
			<include name="server*.properties" />
		  </srcfileset>
		  <targetfileset dir="@{jbossConfDir}">
			<include name="deploy/*ds.xml" />
		  </targetfileset>
		</dependset>

		<copy todir="@{jbossConfDir}">
		  <fileset dir="${jboss.tempates.dir}/${@{configuration}.jboss.template}">
			<include name="deploy/*ds.xml" />
		  </fileset>
		  <filterset>
			<filter token="datasource.url" value="${@{configuration}.datasource.url}" />
			<filter token="datasource.user" value="${@{configuration}.datasource.user}" />
			<filter token="datasource.password" value="${@{configuration}.datasource.password}" />
		  </filterset>
		</copy>
		<copy todir="@{jbossConfDir}/lib">
		  <fileset dir="${resolve.dir}/jbossconfig">
			<include name="*.jar" />
		  </fileset>
		</copy>
	  </sequential>
	</macrodef>

	<macrodef name="MakePackageJBossConfig">
	  <attribute name="earTargetDir" />
	  <attribute name="configuration" />
	  <sequential>
		<PrepareJBossConfig jbossConfDir="${target.dir}/@{earTargetDir}/jbossConfig" configuration="@{configuration}" />
		<zip destfile="${deploy.dir}/@{earTargetDir}/JBossConfig.zip" basedir="${target.dir}/@{earTargetDir}/jbossConfig" />
	  </sequential>
	</macrodef>

</project>
